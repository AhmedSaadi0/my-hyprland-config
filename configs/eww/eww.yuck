; --------------------------------------------
; ---------------- BAR WINDOW ----------------
; --------------------------------------------
(defwindow bar
  :monitor 0
  :windowtype "dock"
  :geometry (
    geometry
    :x "0%"
    :y "0%"
    :width "100%"
    :height "1%"
    :anchor "top center"
  )
  :reserve (
    struts
    :side "top"
    :distance "0%"
  )
  :stacking "fg"
  :exclusive true
  (bar)
)

; --------------------------------------------
; ---------------- BAR WIDGET ----------------
; --------------------------------------------
(defwidget bar []
  (centerbox
    :orientation "h"
    :class "bar"
    (right_bar)
    (title_text
      :title ""
      :spacing 0
      :text my_time
      :valign "center"
      :halign "center"
      :title_class "unset time-icon"
      :text_class "unset time-text"
      :orientation "h"
      :title_onclick "sh ~/.config/eww/scripts/open_menu.sh"
      :text_onclick "sh ~/.config/eww/scripts/open_menu.sh"
    )
    (left_bar)
  )
)

(defwidget left_bar []
  (box
    :orientation "h"
    :space-evenly false
    :halign "end"
    :spacing 7
    (netspeed_box)
    (title_text
      :title {battery["icon"]}
      :spacing 0
      :text {battery["percentage"]}
      :valign "center"
      :halign "center"
      :title_class "unset battery-icon"
      :text_class "unset battery-text"
      :orientation "h"
      ; :title_onclick "sh ~/.config/eww/scripts/open_menu.sh"
      ; :text_onclick "sh ~/.config/eww/scripts/open_menu.sh"
    )
    (title_text
      :title ""
      :spacing 0
      :text volume
      :valign "center"
      :halign "center"
      :title_class "unset battery-icon"
      :text_class "unset battery-text"
      :orientation "h"
      ; :title_onclick "sh ~/.config/eww/scripts/open_menu.sh"
      ; :text_onclick "sh ~/.config/eww/scripts/open_menu.sh"
    )
    (tray)
    (left_menu_button)
  )
)

(defwidget right_bar []
  (box
    :orientation "h"
    :space-evenly false
    :halign "start"
    :spacing 7
    (workspaces)
    (box
      :class "hw-util"
      :orientation "h"
      :space-evenly false
      :spacing 20
      (ram_widget)
      (cpu_widget)
    )
  )
)

; -------------------------------------
; ---------------- CPU ----------------
; -------------------------------------
(defpoll cpu_script
  :interval "1s"
  "sh ~/.config/eww/scripts/cpu.sh"
)

(defwidget cpu_widget []
  (circle_widget
    :value {cpu_script["cpu_usage"]}
    :thickness 7
    :progress_class "unset cpu_box"
    :icon_class "unset iconcpu"
    :limit_width 1
    :tooltip "يتم استخدام ${cpu_script["cpu_usage"]}% من المعالج"
    ; :onclick "$HOME/.config/eww/bar/scripts/pop system"
    :lable ""
  )
)

; -------------------------------------
; ---------------- RAM ----------------
; -------------------------------------
(defpoll ram_script
  :interval "10s"
  "sh ~/.config/eww/scripts/ram.sh"
)

(defwidget ram_widget []
  (circle_widget
    :value ram_script
    :thickness 7
    :progress_class "unset mem_box"
    :icon_class "unset iconmem"
    :limit_width 1
    :tooltip "تم استخدام ${ram_script}% من الرام"
    ; :onclick "$HOME/.config/eww/bar/scripts/pop system"
    :lable ""
  )
)

; --------------------------------------------
; ---------------- WORKSPACES ----------------
; --------------------------------------------
(deflisten get_workspaces
  :initial "[]"
  "sh ~/.config/eww/scripts/get-workspaces.sh"
)
(deflisten current_workspace
  :initial "1"
  "sh ~/.config/eww/scripts/get-active-workspace.sh"
)

(defwidget workspaces []
  (box
    :class "unset workspaces-box"
    :orientation "h"
    :space-evenly true
    :halign "start"
    :spacing 0
    (button
      :class {
      current_workspace == 1 ? "active-workspace unset" :
      get_workspaces["workspace_1"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 1" ""
    )
    (button
      :class {
      current_workspace == 2 ? "active-workspace unset" :
      get_workspaces["workspace_2"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 2" ""
    )
    (button
      :class {
      current_workspace == 3 ? "active-workspace unset" :
      get_workspaces["workspace_3"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 3" ""
    )
    (button
      :class {
      current_workspace == 4 ? "active-workspace unset" :
      get_workspaces["workspace_4"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 4" ""
    )
    (button
      :class {
      current_workspace == 5 ? "active-workspace unset" :
      get_workspaces["workspace_6"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 5" ""
    )
    (button
      :class {
      current_workspace == 6 ? "active-workspace unset" :
      get_workspaces["workspace_6"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 6" ""
    )
    (button
      :class {
      current_workspace == 7 ? "active-workspace unset" :
      get_workspaces["workspace_7"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 7" ""
    )
    (button
      :class {
      current_workspace == 8 ? "active-workspace unset" :
      get_workspaces["workspace_8"] > 0 ? "unset has-windows" : "unset inactive-workspace"
      }
      :onclick "hyprctl dispatch workspace 8" ""
    )
  )
)

; -----------------------------------------
; ---------------- SYSTRAY ----------------
; -----------------------------------------
(defwidget tray []
  (systray
    :class "unset"
    :active-only false
    ; :pack-direction "rtl"
    ; :interval "1s"
  )
)

(defwidget metric [label value onchange]
  (box
    :orientation "h"
    ; :class "metric"
    :space-evenly false
    (box
      :class "label"
      label
    )
    (scale
      :min 0
      :max 101
      :active {onchange != ""}
      :value value
      :onchange onchange
    )
  )
)

(defpoll volume
  :interval "1s"
  "sh ~/.config/eww/scripts/getvol"
)


(defpoll my_time
  :interval "10s"
  ; "date '+(%I:%M) %A, %d %B'"
  "date '+(%I:%M) %A, %d %B'"
)

; ------------------------------------------
; ---------------- NETSPEED ----------------
; ------------------------------------------
(defpoll netspeed_poll
  :interval "0.5s"
  "sh ~/.config/eww/scripts/netspeed.sh"
)

(defwidget netspeed_box []
  (box
    :class "netspeed-box"
    :orientation "h"
    :space-evenly false
    :halign "center"
    :valign "center"
    :spacing 0
    (button
      :limit-width 1
      :class "unset netspeed-icon"
      :onclick "sh ~/.config/eww/scripts/open_internet_settings.sh"
      ""
    )
    (title_text
      :spacing 5
      :title ""
      :text {netspeed_poll["download"]}
      :box_class "netspeed-download"
      :orientation "h"
      :title_class "unset"
      :text_class "unset"
      :title_onclick "sh ~/.config/eww/scripts/open_internet_settings.sh"
      :text_onclick "sh ~/.config/eww/scripts/open_internet_settings.sh"
    )
    (title_text
      :title ""
      :spacing 5
      :text {netspeed_poll["upload"]}
      :box_class "netspeed-upload"
      :title_class "unset"
      :text_class "unset"
      :orientation "h"
      :title_onclick "sh ~/.config/eww/scripts/open_internet_settings.sh"
      :text_onclick "sh ~/.config/eww/scripts/open_internet_settings.sh"
    )
  )
)

; -----------------------------------------
; ---------------- BATTERY ----------------
; -----------------------------------------
(defpoll battery
  :interval "5s"
  "sh ~/.config/eww/scripts/battery_percentage.sh"
)

; -------------------------------------------
; ---------------- left menu ----------------
; -------------------------------------------
(defvar left_menu_visible false)

(defwidget left_menu_button []
  (button
    :class "unset power"
    :onclick "sh ~/.config/eww/scripts/open_menu.sh" ""
  )
)

(defwindow left_menu
  :monitor 0
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :class "unset left_menu"
  :geometry (
    geometry
    :width "18%"
    :height "10%"
    :x "8"
    :y "8"
  )
  (box
    :orientation "v"
    :valign "top"
    :vexpand "false"
    :hexpand "false"
    :space-evenly "false"
    (profile_header)
    (music_player)
    (power_buttons)
  )
)

; -------- profile header --------
(defwidget profile_header []
  (box
    :orientation "v"
    (box :class "unset profile")
    (profile)
  )
)

(defpoll processes
  :interval "100s"
  "ps aux | wc -l"
)

(defpoll up_time
  :interval "3600s"
  ; "awk '{print int($1 / 3600)}' /proc/uptime "
  "sh ~/.config/eww/scripts/uptime.sh"
)

(defpoll installed_packages
  :interval "3600s"
  "pacman -Qq | wc -l"
)

(defwindow left_menu_profile
  :monitor 0
  :stacking "fg"
  :windowtype "normal"
  :wm-ignore true
  :geometry (
    geometry
    :width "18%"
    :height "50%"
    :x "8"
    :y "8"
  )
  (box
    :class "left_menu_profile"
    (profile)
  )
)

(defwidget profile []
  (box
    :orientation "v"
    :class "unset profile_inside"
    :space-evenly false
    :spacing 45
    :valign "center"
    :halign "center"
    :vexpand "false"
    :hexpand "false"
    (image
      :path "/home/ahmed/.config/eww/images/image.png"
      :image-width "80"
      :image-height "80"
      :class "unset profile-image"
    )
    (title_text
      :title "احمد الصعدي"
      :text "بيثون بيثون بيثون"
      :title_class "title_class unset"
      :text_class "text_class unset"
      :orientation "v"
    )
    (box
      :orientation "h"
      :spacing 10
      :valign "center"
      :halign "center"
      :class "second-row-box unset"
      :vexpand "false"
      :hexpand "false"
      (title_text
        :title "العمليات"
        :text processes
        :title_class "second-row-title unset"
        :text_class "second-row-text unset"
        :orientation "v"
        :spacing 10
      )
      (title_text
        :title "ساعات التشغيل"
        :text up_time
        :title_class "second-row-title unset"
        :text_class "second-row-text unset"
        :orientation "v"
        :spacing 10
      )
      (title_text
        :title "الحزم"
        :text installed_packages
        :title_class "second-row-title unset"
        :text_class "second-row-text unset"
        :orientation "v"
        :spacing 10
      )
    )
  )
)

; -------- Music player --------
; (defvar music_playing false)
(deflisten music
  :initial ""
  "playerctl --follow metadata --format '{{ artist }} - {{ title }}' || true"
)

(defpoll music_playing
  :interval "1s"
  "playerctl status"
)

(defpoll music_progress
  :interval "5s"
  "sh ~/.config/eww/scripts/music_progress.sh"
)

(defwidget music_player []
  (box
    :orientation "h"
    :spacing 20
    :valign "start"
    :halign "center"
    :class "music-box unset"
    :vexpand "false"
    :hexpand "false"
    :space-evenly "false"
    (image
      :path "/home/ahmed/.config/eww/images/no_music.png"
      :image-width "90"
      :image-height "90"
    )
    (box
      :orientation "v"
      ; :spacing 10
      :space-evenly "false"
      :valign "start"
      :halign "left"
      :vexpand "false"
      :hexpand "false"
      :class "music-box-inside"
      (title_text
        :title {music_progress["currently_playing"]}
        :text {music_progress["artist"]}
        :title_class "unset music-title"
        :text_class "unset music-text"
        :orientation "v"
        ; :spacing 7
      )
      (progress
        :class "prog-bar"
        :valign "start"
        :width 5
        :value {music_progress["position_percentage"]}
        :orientation "h"
        :flipped true
      )
      (box
        :vexpand "false"
        :hexpand "false"
        :space-evenly false
        :vexpand false
        :hexpand false
        (button
          :class "music-btn"
          :onclick "playerctl previous"
          ""
        )
        (button
          :class "music-btn"
          :onclick "playerctl play-pause"
          {music_playing == "Playing" ? "⏸": ""}
        )
        (button
          :class "music-btn"
          :onclick "playerctl next"
          ""
        )
      )
    )
  )
)

; ----------------------------------------------
; ---------------- POWER BUTTON ----------------
; ----------------------------------------------
(defwidget power_buttons[]
  (box
    :orientation "h"
    :spacing 4
    :valign "start"
    :halign "center"
    :vexpand "false"
    :hexpand "false"
    :space-evenly "false"
    (button
      :class "power-button"
      :onclick "poweroff"
      ""
    )
    (button
      :class "power-button"
      :onclick "reboot"
      ""
    )
    (button
      :class "power-button"
      :onclick "loginctl kill-session self"
      ""
    )
  )
)


; -----------------------------------------------------
; ---------------------- Helpers ----------------------
; -----------------------------------------------------
(defwidget title_text [
  title
  text
  ?box_class
  ?title_class
  ?text_class
  orientation
  ?spacing
  ?title_onclick
  ?text_onclick
  ?valign
  ?halign
  ?tooltip
  ]
  (box
    :orientation orientation
    :space-evenly false
    :spacing spacing
    :valign valign
    :halign halign
    :class box_class
    :tooltip tooltip
    (button
      :class title_class
      :onclick title_onclick
      title
    )
    (button
      :class text_class
      :onclick text_onclick
      text
    )
  )
)


(defwidget circle_widget [
  value
  ?thickness
  ?progress_class
  ?icon_class
  ?limit_width
  ?tooltip
  ?onclick
  ?lable
  ]
  (circular-progress
    :value value
    ; :value 100
    :thickness thickness
    :class progress_class
    (button
      :class icon_class
      :limit-width limit_width
      :tooltip tooltip
      :onclick onclick
      :show_truncated false
      :wrap false
      lable
    )
  )
)
