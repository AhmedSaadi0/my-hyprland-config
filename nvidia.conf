# #
# # (https://wiki.hyprland.org/Configuring/Environment-variables/)
# # (https://github.com/swaywm/wlroots/blob/master/docs/env_vars.md)
# # (https://www.reddit.com/r/hyprland/comments/17j12jz/finally_got_xwayland_on_nvidia_working_perfectly/)
# #

# #####################################
# #       F*** nvidia specific        #
# #####################################

# Hardware acceleration on NVIDIA GPUs
# (https://wiki.archlinux.org/title/Hardware_video_acceleration)
# env = LIBVA_DRIVER_NAME,nvidia

# # (https://wiki.archlinux.org/title/Wayland#Requirements)
# # WARN: crashes me hyprland
# env = GBM_BACKEND,nvidia-drm
# # To force GBM as a backend
# env = __GLX_VENDOR_LIBRARY_NAME,nvidia
# env = _JAVA_AWT_WM_NOREPARENTING,1

# # TIP: Advantage is all the apps will be running on nvidia
# # WARN: crashes whatever window's opened after "hibranate"
# # env = __NV_PRIME_RENDER_OFFLOAD,1

# # Controls if G-Sync capable monitors should use Variable Refresh Rate (VRR)
# # See Nvidia Documentation for details.
# # (https://download.nvidia.com/XFree86/Linux-32bit-ARM/375.26/README/openglenvvariables.html)
# # env = __GL_GSYNC_ALLOWED,1

# # Controls if Adaptive Sync should be used. Recommended to set as “0” to avoid
# # having problems on some games.
# # env = __GL_VRR_ALLOWED,1
# # use legacy DRM interface instead of atomic mode setting. Might fix flickering
# # issues
# # env = WLR_DRM_NO_ATOMIC=1

# # env = __VK_LAYER_NV_optimus,NVIDIA_only
# # env = NVD_BACKEND,direct

# NOTE: this is also an nvidia specific
# env = XDG_SESSION_TYPE,wayland

# # Run SDL2 applications on Wayland. Remove or set to x11 if games that 
# # provide older versions of SDL cause compatibility issues
# # env = SDL_VIDEODRIVER,wayland 

# Clutter package already has wayland enabled, this variable 
#will force Clutter applications to try and use the Wayland backend
# env = CLUTTER_BACKEND,wayland 

# software rendering backend 
# env = WLR_RENDERER_ALLOW_SOFTWARE,1


#####################################
#         QT specific               #
#####################################

# (From the QT documentation) enables automatic scaling, based on the monitor’s pixel density
# https://doc.qt.io/qt-5/highdpi.html
env = QT_AUTO_SCREEN_SCALE_FACTOR,1
# Disables window decorations on QT applications
env = QT_WAYLAND_DISABLE_WINDOWDECORATION,1
env = QT_QPA_PLATFORM,wayland # "wayland;xcb"

env = XDG_SESSION_DESKTOP,Hyprland
env = XDG_CURRENT_DESKTOP,Hyprland

# env = QT_QPA_PLATFORM,wayland;xcb 
env = QT_WAYLAND_RECONNECT,1
env = QT_AUTO_SCREEN_SCALE_FACTOR,0
# env = QT_QPA_PLATFORMTHEME,qt5ct

env = XCURSOR_THEME,breeze_cursors
env = XCURSOR_SIZE,24
env = HYPRCURSOR_THEME,breeze_cursors
env = HYPRCURSOR_SIZE,24

# ----------------
env = LIBVA_DRIVER_NAME,nvidia
env = XDG_SESSION_TYPE,wayland
env = GBM_BACKEND,nvidia-drm
env = __GLX_VENDOR_LIBRARY_NAME,nvidia
env = WLR_NO_HARDWARE_CURSORS,1
# env = WLR_DRM_NO_ATOMIC,1
# env = NVIDIA_ANTI_FLICKER,1

env = QT_QPA_PLATFORMTHEME,kde
